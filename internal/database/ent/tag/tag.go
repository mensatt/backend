// Code generated by ent, DO NOT EDIT.

package tag

import (
	"fmt"

	"github.com/mensatt/backend/internal/database/schema"
)

const (
	// Label holds the string label denoting the tag type in the database.
	Label = "tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldShortName holds the string denoting the short_name field in the database.
	FieldShortName = "short_name"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldIsAllergy holds the string denoting the is_allergy field in the database.
	FieldIsAllergy = "is_allergy"
	// Table holds the table name of the tag in the database.
	Table = "tags"
)

// Columns holds all SQL columns for tag fields.
var Columns = []string{
	FieldID,
	FieldKey,
	FieldName,
	FieldDescription,
	FieldShortName,
	FieldPriority,
	FieldIsAllergy,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "tags"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"occurrence_tags",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
	// ShortNameValidator is a validator for the "short_name" field. It is called by the builders before save.
	ShortNameValidator func(string) error
	// DefaultIsAllergy holds the default value on creation for the "is_allergy" field.
	DefaultIsAllergy bool
)

const DefaultPriority schema.TagPriority = "HIDE"

// PriorityValidator is a validator for the "priority" field enum values. It is called by the builders before save.
func PriorityValidator(pr schema.TagPriority) error {
	switch pr {
	case "HIDE", "LOW", "MEDIUM", "HIGH":
		return nil
	default:
		return fmt.Errorf("tag: invalid enum value for priority field: %q", pr)
	}
}
