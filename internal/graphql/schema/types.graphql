enum Priority {
    LOW
    MEDIUM
    HIGH
}

enum ReviewStatus {
    CONFIRMED
    APPROVED
    AWAITING_APPROVAL
    UPDATED
    PENDING_DELETION
}

type Tag {
    key: String!
    name: String!
    description: String!
    shortName: String
    priority: Priority!
    isHidden: Boolean!
    isAllergy: Boolean!
}

type Dish {
    id: UUID!
    nameDe: String!
    nameEn: String
    aliases: [String!]!
    reviews: [Review!]!
    reviewMetadata: ReviewMetadata!
    images: [Image!]!
}

type DishAlias {
    dish: UUID!
    aliasName: String!
    normalizedAliasName: String!
}

type Location {
    id: UUID!
    externalId: Int!
    name: String!
}

type Occurrence {
    id: UUID!
    location: Location!
    dish: Dish!
    sideDishes: [Dish!]!
    date: Date!
    reviewStatus: ReviewStatus!
    kj: Int,
    kcal: Int,
    fat: Int,
    saturatedFat: Int,
    carbohydrates: Int,
    sugar: Int,
    fiber: Int,
    protein: Int,
    salt: Int,
    priceStudent: Int
    priceStaff: Int
    priceGuest: Int
    tags: [Tag!]!
    reviews: [Review!]!
    reviewMetadata: ReviewMetadata!
    images: [Image!]!
}

type OccurrenceSideDish {
    occurrence: Occurrence!
    dish: Dish!  
}

type OccurrenceTag {
    occurrence: Occurrence!
    tag: Tag!  
}

type Review {
    id: UUID!
    occurrence: Occurrence!
    displayName: String!
    stars: Int!
    text: String
    upVotes: Int!
    downVotes: Int!
    createdAt: Timestamp!
    updatedAt: Timestamp!
    acceptedAt: Timestamp
}

type ReviewMetadata {
    averageStars: Float
    reviewCount: Int!
}

type Image {
    id: UUID!
    occurrence: Occurrence!
    displayName: String!
    description: String
    upVotes: Int!
    downVotes: Int!
    createdAt: Timestamp!
    updatedAt: Timestamp!
    acceptedAt: Timestamp
    imageUrl: String!
}

type User {
    id: UUID!
    email: String!
}

type VcsBuildInfo {
    commitTime: String!
    commit: String!
    modified: String!
}