// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type ReviewStatus string

const (
	ReviewStatusApproved         ReviewStatus = "APPROVED"
	ReviewStatusAwaitingApproval ReviewStatus = "AWAITING_APPROVAL"
	ReviewStatusUpdated          ReviewStatus = "UPDATED"
)

var AllReviewStatus = []ReviewStatus{
	ReviewStatusApproved,
	ReviewStatusAwaitingApproval,
	ReviewStatusUpdated,
}

func (e ReviewStatus) IsValid() bool {
	switch e {
	case ReviewStatusApproved, ReviewStatusAwaitingApproval, ReviewStatusUpdated:
		return true
	}
	return false
}

func (e ReviewStatus) String() string {
	return string(e)
}

func (e *ReviewStatus) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ReviewStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ReviewStatus", str)
	}
	return nil
}

func (e ReviewStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
