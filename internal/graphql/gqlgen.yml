schema:
  - schema/**/*.graphql

# Where should the generated server code go?
exec:
  filename: gqlserver/generated.go
  package: gqlserver

# Enable Apollo federation support
# federation:
#   filename: gqlserver/federation.go
#   package: gqlserver

# Where should any generated models go?
model:
  filename: models/generated.go
  package: models

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: resolvers/
  package: resolvers
  filename_template: "{name}.resolvers.go"
# resolver:
#   filename: resolvers/generated/resolver.go
#   type: Resolver
#   package: resolvers_generated
# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
# autobind:
#   - "github.com/your/app/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  # Scalars
  String:
    model:
      - github.com/99designs/gqlgen/graphql.String
      - github.com/mensatt/backend/internal/graphql/scalars.NullString
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int32
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/mensatt/backend/internal/graphql/scalars.NullInt
  Timestamp:
    model:
      - github.com/99designs/gqlgen/graphql.Time
      - github.com/mensatt/backend/internal/graphql/scalars.NullTime
  Date:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.Date
      - github.com/mensatt/backend/internal/graphql/scalars.NullDate
  UUID:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.UUID
      - github.com/mensatt/backend/internal/graphql/scalars.NullUUID

  # Enums
  Priority:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.Priority
  ReviewStatus:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.ReviewStatus
  
  # SQLC models
  Tag:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Tag
  Dish:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Dish
  DishAlias:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.DishAlias
  Occurrence:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Occurrence
  OccurrenceTag:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.OccurrenceTag
  OccurrenceSideDish:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.OccurrenceSideDish
  Review:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Review
  ReviewMetadata:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.GetOccurrenceReviewMetadataRow
  Image:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Image
  User:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.User
  Location:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.Location
  
  # SQLC Params
  # Tag
  CreateTagInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.CreateTagParams
  # Dish
  CreateDishInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.CreateDishParams
  UpdateDishInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.UpdateDishParams
  # DishAlias
  CreateDishAliasInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.CreateDishAliasParams
  UpdateDishAliasInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.UpdateDishAliasParams
  # Occurrence
  UpdateOccurrenceInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.UpdateOccurrenceParams
  AddTagToOccurrenceInput:
      model:
      - github.com/mensatt/backend/internal/db/sqlc.AddOccurrenceTagParams
  RemoveTagFromOccurrenceInput:
      model:
      - github.com/mensatt/backend/internal/db/sqlc.RemoveOccurrenceTagParams
  AddSideDishToOccurrenceInput:
      model:
      - github.com/mensatt/backend/internal/db/sqlc.AddOccurrenceSideDishParams
  RemoveSideDishFromOccurrenceInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.RemoveOccurrenceSideDishParams
  # Review
  CreateReviewInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.CreateReviewParams
  UpdateReviewInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.UpdateReviewParams
  # Image
  UpdateImageInput:
    model:
      - github.com/mensatt/backend/internal/db/sqlc.UpdateImageParams

  # Input helper types      
  CreateOccurrenceInput:
    model:
      - github.com/mensatt/backend/internal/graphql/models.CreateOccurrenceInputHelper
  CreateImageInput:
    model:
      - github.com/mensatt/backend/internal/graphql/models.CreateImageInputHelper
  
  # Other
  VcsBuildInfo:
    model:
      - github.com/mensatt/backend/pkg/utils.VCSBuildInfo
