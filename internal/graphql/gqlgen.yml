schema:
  - schema/**/*.graphql

# Where should the generated server code go?
exec:
  filename: gqlserver/generated.go
  package: gqlserver

# Enable Apollo federation support
# federation:
#   filename: gqlserver/federation.go
#   package: gqlserver

# Where should any generated models go?
model:
  filename: models/generated.go
  package: models

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: resolvers/
  package: resolvers
  filename_template: "{name}.resolvers.go"
# resolver:
#   filename: resolvers/generated/resolver.go
#   type: Resolver
#   package: resolvers_generated
# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - github.com/mensatt/backend/internal/database/ent

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  # Scalars
  Timestamp:
    model:
      - github.com/99designs/gqlgen/graphql.Time
      - github.com/mensatt/backend/internal/graphql/scalars.NullTime

  Date:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.Date
      - github.com/mensatt/backend/internal/graphql/scalars.NullDate

  UUID:
    model:
      - github.com/mensatt/backend/internal/graphql/scalars.UUID
      - github.com/mensatt/backend/internal/graphql/scalars.NullUUID

  # Enum remaps (can hopefully be removed in the future)
  TagPriority:
    model:
      - github.com/mensatt/backend/internal/database/schema.TagPriority

  OccurrenceStatus:
    model:
      - github.com/mensatt/backend/internal/database/schema.OccurrenceStatus

  # Other
  VcsBuildInfo:
    model:
      - github.com/mensatt/backend/pkg/utils.VCSBuildInfo

  # Testing / Fixing
#  ReviewDataDish:
#    model:
#      - github.com/mensatt/backend/internal/graphql/models.ReviewDataDish