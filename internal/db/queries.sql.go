// Code generated by sqlc. DO NOT EDIT.
// source: queries.sql

package db

import (
	"context"
)

const getAllergies = `-- name: GetAllergies :many
select abbreviation, name from allergy
`

func (q *Queries) GetAllergies(ctx context.Context) ([]Allergy, error) {
	rows, err := q.db.Query(ctx, getAllergies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Allergy
	for rows.Next() {
		var i Allergy
		if err := rows.Scan(&i.Abbreviation, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getTags = `-- name: GetTags :many
select abbreviation, name from tag
`

func (q *Queries) GetTags(ctx context.Context) ([]Tag, error) {
	rows, err := q.db.Query(ctx, getTags)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tag
	for rows.Next() {
		var i Tag
		if err := rows.Scan(&i.Abbreviation, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
