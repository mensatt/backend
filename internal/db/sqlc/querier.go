// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package sqlc

import (
	"context"
	"time"

	"github.com/google/uuid"
)

type Querier interface {
	AddMultipleOccurrenceSideDishes(ctx context.Context, arg []*AddMultipleOccurrenceSideDishesParams) (int64, error)
	AddMultipleOccurrenceTags(ctx context.Context, arg []*AddMultipleOccurrenceTagsParams) (int64, error)
	AddOccurrenceSideDish(ctx context.Context, arg *AddOccurrenceSideDishParams) (*OccurrenceSideDish, error)
	AddOccurrenceTag(ctx context.Context, arg *AddOccurrenceTagParams) (*OccurrenceTag, error)
	CreateDish(ctx context.Context, name string) (*Dish, error)
	CreateOccurrence(ctx context.Context, arg *CreateOccurrenceParams) (*Occurrence, error)
	CreateReview(ctx context.Context, arg *CreateReviewParams) (*Review, error)
	CreateTag(ctx context.Context, arg *CreateTagParams) (*Tag, error)
	DeleteOccurrence(ctx context.Context, id uuid.UUID) (*Occurrence, error)
	EditOccurrence(ctx context.Context, arg *EditOccurrenceParams) (*Occurrence, error)
	GetAllDishes(ctx context.Context) ([]*Dish, error)
	GetAllImages(ctx context.Context) ([]*Image, error)
	GetAllOccurrences(ctx context.Context) ([]*Occurrence, error)
	GetAllReviews(ctx context.Context) ([]*Review, error)
	GetAllTags(ctx context.Context) ([]*Tag, error)
	GetDishByID(ctx context.Context, id uuid.UUID) (*Dish, error)
	GetImageByID(ctx context.Context, id uuid.UUID) (*Image, error)
	GetImagesForOccurrence(ctx context.Context, id uuid.UUID) ([]*Image, error)
	GetOccurrenceByID(ctx context.Context, id uuid.UUID) (*Occurrence, error)
	GetOccurrencesByDate(ctx context.Context, date time.Time) ([]*Occurrence, error)
	GetReviewByID(ctx context.Context, id uuid.UUID) (*Review, error)
	GetReviewsForOccurrence(ctx context.Context, id uuid.UUID) ([]*Review, error)
	GetSideDishesForOccurrence(ctx context.Context, occurrence uuid.UUID) ([]*Dish, error)
	GetTagByKey(ctx context.Context, key string) (*Tag, error)
	GetTagsForOccurrence(ctx context.Context, occurrence uuid.UUID) ([]*Tag, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (*User, error)
	RemoveOccurrenceSideDish(ctx context.Context, arg *RemoveOccurrenceSideDishParams) (*OccurrenceSideDish, error)
	RemoveOccurrenceTag(ctx context.Context, arg *RemoveOccurrenceTagParams) (*OccurrenceTag, error)
}

var _ Querier = (*Queries)(nil)
